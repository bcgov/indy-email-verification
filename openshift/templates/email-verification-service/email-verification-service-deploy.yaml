---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${NAME}${SUFFIX}
objects:
# - kind: ExternalNetwork
#   apiVersion: security.devops.gov.bc.ca/v1alpha1
#   metadata:
#     name: ${NAME}${SUFFIX}
#     network: ${NAME}${SUFFIX}
#     labels:
#       name: ${NAME}${SUFFIX}
#       network: ${NAME}${SUFFIX}
#       app: ${APP_NAME}${SUFFIX}
#       app-group: ${APP_GROUP}
#       env: ${TAG_NAME}
#   spec:
#     description: |
#       Define the network parameters for accessing smtp server
#     entries:
#       - ${SMTP_EMAIL_HOST}
#     servicePorts:
#       - tcp/25
# - kind: NetworkSecurityPolicy
#   apiVersion: security.devops.gov.bc.ca/v1alpha1
#   metadata:
#     name: ${NAME}${SUFFIX}
#     labels:
#       name: ${NAME}${SUFFIX}
#       env: ${TAG_NAME}
#       app: ${APP_NAME}${SUFFIX}
#       app-group: ${APP_GROUP}
#   spec:
#     description: Allow service to access the database and agent
#     source:
#       - - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
#         - role=${ROLE}
#         - app=${APP_NAME}${SUFFIX}
#         - env=${TAG_NAME}
#     destination:
#       - - ext:name=${NAME}${SUFFIX}
#       - - role=db
#         - app=${APP_NAME}${SUFFIX}
#         - env=${TAG_NAME}
#         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
#       - - role=agent
#         - app=${APP_NAME}${SUFFIX}
#         - env=${TAG_NAME}
#         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: ${NAME}-allow-ingress
    labels:
      name: ${NAME}-allow-ingress
      app: ${APP_NAME}
      app-group: ${APP_GROUP}
      role: ${ROLE}
      env: ${TAG_NAME}
  spec:
    description: |
      Allow traffic from routes into the ${ROLE} container(s).
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                network.openshift.io/policy-group: ingress
    podSelector:
      matchLabels:
        role: ${ROLE}
        app: ${APP_NAME}
        env: ${TAG_NAME}
    policyTypes:
      - Ingress
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: ${NAME}
    labels:
      name: ${NAME}
      app: ${APP_NAME}
      env: ${TAG_NAME}
  spec:
    description: Allow the agent to access the service.
    ingress:
      - from:
        - podSelector:
            matchLabels:
              role: ${AGENT_ROLE}
              app: ${APP_NAME}
              env: ${TAG_NAME}
          namespaceSelector:
            matchLabels:
              name: ${NAMESPACE_NAME}
              environment: ${TAG_NAME}
        ports:
          - protocol: TCP
            port: ${{PORT}}
    podSelector:
      matchLabels:
        role: ${ROLE}
        app: ${APP_NAME}
        env: ${TAG_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${NAME}${SUFFIX}
    labels:
      app: ${APP_NAME}${SUFFIX}
      name: ${NAME}${SUFFIX}
      app-group: ${APP_GROUP}
      role: ${ROLE}
      env: ${TAG_NAME}
  spec:
    ports:
    - name: ${NAME}${SUFFIX}
      port: ${{PORT}}
      protocol: TCP
      targetPort: ${{PORT}}
    selector:
      name: ${NAME}${SUFFIX}

- kind: Route
  apiVersion: v1
  metadata:
    name: ${NAME}${SUFFIX}
    labels:
      app: ${APP_NAME}${SUFFIX}
      name: ${NAME}${SUFFIX}
      app-group: ${APP_GROUP}
      role: ${ROLE}
      env: ${TAG_NAME}
      certbot-managed: ${CERTBOT_MANAGED_ROUTE}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: ${NAME}${SUFFIX}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${NAME}${SUFFIX}
      weight: 100

- kind: Secret
  apiVersion: v1
  metadata:
    name: ${NAME}${SUFFIX}-email-host
    labels:
      app: ${APP_NAME}${SUFFIX}
      name: ${NAME}${SUFFIX}
      app-group: ${APP_GROUP}
      role: ${ROLE}
      env: ${TAG_NAME}
  stringData:
    email-host: ${SMTP_EMAIL_HOST}
  type: Opaque

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${NAME}${SUFFIX}
    labels:
      app: ${APP_NAME}${SUFFIX}
      name: ${NAME}${SUFFIX}
      app-group: ${APP_GROUP}
      role: ${ROLE}
      env: ${TAG_NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}${SUFFIX}
    strategy:
      type: Rolling
    template:
      metadata:
        name: ${NAME}${SUFFIX}
        labels:
          app: ${APP_NAME}${SUFFIX}
          name: ${NAME}${SUFFIX}
          app-group: ${APP_GROUP}
          role: ${ROLE}
          env: ${TAG_NAME}
      spec:
        containers:
        - name: ${NAME}${SUFFIX}
          env:
          - name: PORT
            value: ${PORT}
          - name: SITE_URL
            value: ${SITE_URL}
          - name: AGENT_URL
            value: ${AGENT_URL}
          - name: DEBUG
            value: ${DEBUG}
          - name: AGENT_ADMIN_API_KEY
            valueFrom:
              secretKeyRef:
                name: ${AGENT_SERVICE_NAME}${SUFFIX}-api
                key: admin-api-key
          - name: EMAIL_HOST
            valueFrom:
              secretKeyRef:
                name: ${NAME}${SUFFIX}-email-host
                key: email-host
          - name: DB_NAME
            value: ${DATABASE_NAME}
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${DATABASE_SERVICE_NAME}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${DATABASE_SERVICE_NAME}
          - name: DB_PORT
            value: ${DATABASE_PORT}
          - name: DB_HOST
            value: ${DATABASE_SERVICE_NAME}
          - name: EMAIL_PORT
            value: ${EMAIL_PORT}
          - name: EMAIL_USE_SSL
            value: ${EMAIL_USE_SSL}
          - name: APP_MODULE
            value: ${APP_MODULE}
          - name: APP_CONFIG
            value: ${APP_CONFIG}
          - name: WEB_CONCURRENCY
            value: ${WEB_CONCURRENCY}
          image: " "
          ports:
          - containerPort: ${{PORT}}
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 30
            initialDelaySeconds: 3
            httpGet:
              path: "/"
              port: ${{PORT}}
          livenessProbe:
            timeoutSeconds: 30
            initialDelaySeconds: 300
            httpGet:
              path: "/"
              port: ${{PORT}}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}${SUFFIX}
        from:
          kind: ImageStreamTag
          name: ${NAME}:${TAG_NAME}
          namespace: ${IMAGE_NAMESPACE}

parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all the objects defined in this template.
  required: true
  value: email-verification-service
- name: APP_GROUP
  displayName: App Group
  description: The name assigned to all of the deployments in this project.
  required: true
  value: email-verification-service
- name: NAMESPACE_NAME
  displayName: NameSpace name
  description: name of the project namespace
  required: true
  value: a99fd4
- name: APP_NAME
  displayName: App Name
  description: Used to group components together in the OpenShift console.
  required: true
  value: email-verification-service
- name: SUFFIX
  displayName: Suffix
  description: A name suffix used for all objects
  required: false
  value: ''
- name: ROLE
  displayName: Role
  description: The role of this service within the application - used for Network Policies
  required: true
  value: service
- name: AGENT_ROLE
  displayName: Role
  description: The role of the agent within the application - used for Network Policies
  required: true
  value: agent
- name: AGENT_SERVICE_NAME
  displayName: Agent Service Name
  description: The name of the agent service
  required: true
  value: email-verification-agent
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
  required: false
  value: email-verification-dev.apps.silver.devops.gov.bc.ca
- name: CERTBOT_MANAGED_ROUTE
  displayName: Certbot Managed Route
  description: Flag indicating whether the routes certificates are managed by CertBot.
  required: true
  value: 'false'
- name: IMAGE_NAMESPACE
  displayName: Namespace containing application images.
  required: true
  value: a99fd4-tools
- name: TAG_NAME
  displayName: Environment TAG name
  description: The TAG name for this environment, e.g., dev, test, prod.
  required: true
  value: dev
- name: APP_MODULE
  displayName: Application Module
  description: Used to run the application with Gunicorn.
  required: true
  value: email_verification_service.wsgi
- name: APP_CONFIG
  displayName: Gunicorn Config File
  description: option to be passed to gunicorn -c
  required: false
  value: python:email_verification_service.settings
- name: WEB_CONCURRENCY
  displayName: Web Concurrency
  description: Controls/overrides the number of Gunicorn workers.  This MUST be set to 1 when using a SQLite wallet.
  required: true
  value: "1"
- name: PORT
  displayName: Port
  description: The port on which the service will listen.
  required: true
  value: "8080"
- name: SITE_URL
  displayName: Site URL
  description: The URL for the site
  required: true
  value: https://email-verification-dev.apps.silver.devops.gov.bc.ca
- name: AGENT_URL
  displayName: Agent URL
  description: The URL for the agent's admin endpoint.
  required: true
  value: http://email-verification-agent:5000
- name: DEBUG
  displayName: Debug
  description: Flag to indicate whether the service in running in debug mode.
  required: true
  value: "true"
- name: DATABASE_NAME
  displayName: Database Name
  required: true
  value: email-verification-service-db
- name: DATABASE_PORT
  displayName: Database Port
  required: true
  value: "5432"
- name: DATABASE_SERVICE_NAME
  displayName: Database Service Name
  required: true
  value: email-verification-service-db
- name: SMTP_EMAIL_HOST
  displayName: Email Host Name
  required: true
  value: 
- name: EMAIL_PORT
  displayName: Email Port
  required: true
  value: "25"
- name: EMAIL_USE_SSL
  displayName: Email Use SSL
  required: true
  value: "false"
- name: CPU_REQUEST
  displayName: Resources CPU Request
  description: The resources CPU request (in cores) for this build.
  required: true
  value: 10m
- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 250m
- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  description: The resources Memory request (in Mi, Gi, etc) for this build.
  required: true
  value: 10Mi
- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  description: The resources Memory limit (in Mi, Gi, etc) for this build.
  required: true
  value: 1Gi