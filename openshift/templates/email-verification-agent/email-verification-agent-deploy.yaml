---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${NAME}${SUFFIX}
objects:
  # - kind: ExternalNetwork
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: ${NAME}${SUFFIX}
  #     network: ${NAME}${SUFFIX}
  #     labels:
  #       name: ${NAME}${SUFFIX}
  #       network: ${NAME}${SUFFIX}
  #       app: ${APP_NAME}${SUFFIX}
  #       app-group: ${APP_GROUP}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Define the network parameters for accessing remote agents.
  #     entries:
  #       - 0.0.0.0/0
  #     servicePorts:
  #       - tcp/9700:9799
  #       - tcp/80
  #       - tcp/443
  # - kind: NetworkSecurityPolicy
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: ${NAME}${SUFFIX}
  #     labels:
  #       name: ${NAME}${SUFFIX}
  #       env: ${TAG_NAME}
  #       app: ${APP_NAME}${SUFFIX}
  #       app-group: ${APP_GROUP}
  #   spec:
  #     description: Allow the the agent to access the service and external network
  #     source:
  #       - - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
  #         - role=${ROLE}
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #     destination:
  #       - - ext:name=${NAME}${SUFFIX}
  #       - - role=service
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE_NAME}-${TAG_NAME}

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}-allow-ingress
      labels:
        name: ${NAME}-allow-ingress
        app: ${APP_NAME}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow traffic from routes into the ${ROLE} container(s).
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}
          env: ${TAG_NAME}
      policyTypes:
        - Ingress
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        env: ${TAG_NAME}
    spec:
      description: Allow the service to access the agent.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${SERVICE_ROLE}
                  app: ${APP_NAME}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE_NAME}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: ${{INDY_ADMIN_PORT}}
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}
          env: ${TAG_NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        app: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${NAME}${SUFFIX}-admin
          port: ${{INDY_ADMIN_PORT}}
          protocol: TCP
          targetPort: ${{INDY_ADMIN_PORT}}
        - name: ${NAME}${SUFFIX}-public
          port: ${{INDY_AGENT_PORT}}
          protocol: TCP
          targetPort: ${{INDY_AGENT_PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        app: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
        certbot-managed: ${CERTBOT_MANAGED_ROUTE}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}${SUFFIX}-public
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100
  
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}-admin
      labels:
        name: ${NAME}${SUFFIX}-admin
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
        certbot-managed: ${CERTBOT_MANAGED_ROUTE}
      annotations:
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${APPLICATION_ADMIN_DOMAIN}
      port:
        targetPort: ${NAME}${SUFFIX}-admin
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        app: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${PERSISTENT_VOLUME_SIZE}
      storageClassName: ${PERSISTENT_VOLUME_CLASS}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        app: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      seed: ${WALLET_SEED}
      key: ${WALLET_KEY}
    type: Opaque
  
  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}-api
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      admin-api-key: ${ADMIN_API_KEY}
    type: Opaque

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        app: ${APP_NAME}${SUFFIX}
        name: ${NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      strategy:
        type: Rolling
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            app: ${APP_NAME}${SUFFIX}
            name: ${NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              command:
                - bash
                - -c
                - $(echo aca-py start
                  -it http 0.0.0.0 ${AGENT_PORT}
                  -ot http
                  --auto-accept-invites
                  --auto-accept-requests
                  --auto-provision
                  --wallet-type 'indy'
                  --admin '0.0.0.0' ${ADMIN_PORT}
                  $([ ! -z "${AGENT_ADMIN_API_KEY}" ] && echo "--admin-api-key ${AGENT_ADMIN_API_KEY}" || echo "--admin-insecure-mode")
                  );
              env:
                - name: ADMIN_PORT
                  value: ${INDY_ADMIN_PORT}
                - name: AGENT_PORT
                  value: ${INDY_AGENT_PORT}
                - name: ACAPY_WALLET_NAME
                  value: ${NAME}${SUFFIX}-wallet
                - name: ACAPY_WALLET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: key
                - name: ACAPY_WALLET_SEED
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: seed
                - name: AGENT_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}-api
                      key: admin-api-key
                - name: ACAPY_GENESIS_URL
                  value: ${GENESIS_FILE_URL}
                - name: ACAPY_ENDPOINT
                  value: ${AGENT_URL}
                - name: ACAPY_WEBHOOK_URL
                  value: ${WEBHOOK_URL}
                - name: ACAPY_LABEL
                  value: ${DISPLAY_LABEL}
                - name: ACAPY_READ_ONLY_LEDGER
                  value: ${AGENT_READ_ONLY_LEDGER}
              image: " "
              ports:
                - containerPort: ${{INDY_ADMIN_PORT}}
                  protocol: TCP
                - containerPort: ${{INDY_AGENT_PORT}}
                  protocol: TCP
              readinessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 3
                httpGet:
                  path: "/"
                  port: ${{INDY_AGENT_PORT}}
              livenessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 300
                httpGet:
                  path: "/"
                  port: ${{INDY_AGENT_PORT}}
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - name: ${NAME}${SUFFIX}-data
                  mountPath: ${MOUNT_PATH}
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${NAME}${SUFFIX}-data
              persistentVolumeClaim:
                claimName: ${NAME}${SUFFIX}
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG_NAME}
              namespace: ${IMAGE_NAMESPACE}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all the objects defined in this template.
    required: true
    value: email-verification-agent
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: email-verification-service
  - name: NAMESPACE_NAME
    displayName: NameSpace name
    description: name of the project namespace
    required: true
    value: a99fd4
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: email-verification-service
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: ''
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network Policies
    required: true
    value: agent
  - name: SERVICE_ROLE
    displayName: Service Role
    description: The role of the email verification service within the application - used for Network Policies
    required: true
    value: service
  - name: APPLICATION_ADMIN_DOMAIN
    displayName: Application Admin Endpoint Hostname
    description: The exposed admin hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: email-verification-agent-admin-dev.apps.silver.devops.gov.bc.ca
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: email-verification-agent-dev.apps.silver.devops.gov.bc.ca
  - name: CERTBOT_MANAGED_ROUTE
    displayName: Certbot Managed Route
    description: Flag indicating whether the routes certificates are managed by CertBot.
    required: true
    value: 'false'
  - name: IMAGE_NAMESPACE
    displayName: Namespace containing application images.
    required: true
    value: a99fd4-tools
  - name: AGENT_READ_ONLY_LEDGER
    displayName: Set read only ledger flag.
    description: Enable/Disable the read only ledger flag.  Controls the inclusion/exclusion of the agent '--read-only-ledger' startup parameter.  Defaults to disabled.
    required: true
    value: "false"
  - name: ADMIN_API_KEY
    displayName: Agent Admin API Key
    description: The key used to authenticate client requests to the admin api.
    required: false
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod.
    required: true
    value: dev
  - name: INDY_ADMIN_PORT
    displayName: Admin Port
    description: The admin port on which the service will listen.
    required: true
    value: "5000"
  - name: INDY_AGENT_PORT
    displayName: Agent Port
    description: The agent port on which the service will listen.
    required: true
    value: "10000"
  - name: WALLET_KEY
    displayName: Wallet Encryption Key
    description: The encryption key to be used for the wallets.  Needs to be base64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: WALLET_SEED
    displayName: Indy Wallet Seed
    description: The Seed used for the indy wallet.  Needs to be base64 encoded.
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{32}"
  - name: AGENT_URL
    displayName: Site URL
    description: The URL for the site
    required: true
    value: https://email-verification-agent-dev.apps.silver.devops.gov.bc.ca
  - name: WEBHOOK_URL
    displayName: Webhook URL
    description: The webhook endpoint
    required: true
    value: http://email-verification-service:8080/webhooks
  - name: GENESIS_FILE_URL
    displayName: Genesis File URL
    description: The URL from which the genesis file can be downloaded.
    required: true
    value: https://raw.githubusercontent.com/sovrin-foundation/sovrin/stable/sovrin/pool_transactions_sandbox_genesis
  - name: DISPLAY_LABEL
    displayName: Display Label
    description: Display label
    required: true
    value: Email Verification Service
  - name: MOUNT_PATH
    displayName: Mount Path
    description: The path to mount the persistent volume.
    required: true
    value: /home/indy/.indy_client/wallet
  - name: PERSISTENT_VOLUME_SIZE
    displayName: Persistent Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 5Gi
  - name: PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; gluster-file, gluster-block, gluster-file-db
    required: false
    value: netapp-file-standard
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 1Gi
